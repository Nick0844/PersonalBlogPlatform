@model PersonalBlogPlatform.Models.BlogPost
@using System.Security.Claims

@{
    ViewData["Title"] = Model.Title;
}

<div class="row">
    <div class="col-md-8 offset-md-2">
        <article>
            <header class="mb-4">
                <h1 class="display-4">@Model.Title</h1>
                
                <div class="text-muted mb-3">
                    <span>By @Model.Author.FirstName @Model.Author.LastName</span>
                    <span class="ms-3">@Model.PublishedAt?.ToString("MMMM dd, yyyy")</span>
                    <span class="ms-3">@Model.ViewCount views</span>
                </div>
                
                <div class="mb-3">
                    @if (Model.Category != null)
                    {
                        <span class="badge bg-primary">@Model.Category.Name</span>
                    }
                    @foreach (var tag in Model.BlogPostTags)
                    {
                        <span class="badge bg-secondary">@tag.Tag.Name</span>
                    }
                </div>
            </header>
            
            @if (!string.IsNullOrEmpty(Model.FeaturedImageUrl))
            {
                <img src="@Model.FeaturedImageUrl" class="img-fluid mb-4" alt="@Model.Title">
            }
            
            <div class="post-content mb-5">
                @Html.Raw(Model.Content.Replace("\n", "<br />"))
            </div>
            
            @if (User.Identity.IsAuthenticated)
            {
                var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                if (Model.AuthorId == userId || User.IsInRole("Admin"))
                {
                    <div class="mb-4">
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
                    </div>
                }
            }
        </article>
        
        <hr class="my-5">
        
        <!-- COMMENTS SECTION -->
        <section class="comments-section">
            <h3 class="mb-4">Comments (@Model.Comments.Count)</h3>
            
            @if (User.Identity.IsAuthenticated)
            {
                <!-- COMMENT FORM -->
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Leave a Comment</h5>
                        <form asp-controller="Comment" asp-action="Create" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="BlogPostId" value="@Model.Id" />
                            <div class="mb-3">
                                <textarea name="Content" class="form-control" rows="3" placeholder="Write your comment here..." required></textarea>
                                <span class="text-danger" asp-validation-for="Content"></span>
                            </div>
                            <button type="submit" class="btn btn-primary">Post Comment</button>
                        </form>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <p>Please <a asp-controller="Account" asp-action="Login" asp-route-returnUrl="@Context.Request.Path">login</a> to leave a comment.</p>
                </div>
            }
            
            <!-- DISPLAY COMMENTS -->
            @if (Model.Comments != null && Model.Comments.Any())
            {
                @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1">
                                        @comment.User.FirstName @comment.User.LastName
                                        @if (comment.UserId == Model.AuthorId)
                                        {
                                            <span class="badge bg-info text-white">Author</span>
                                        }
                                    </h6>
                                    <small class="text-muted">@comment.CreatedAt.ToString("MMMM dd, yyyy 'at' hh:mm tt")</small>
                                </div>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                                    if (comment.UserId == userId || User.IsInRole("Admin"))
                                    {
                                        <div>
                                            <form asp-controller="Comment" asp-action="Delete" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="id" value="@comment.Id" />
                                                <input type="hidden" name="blogPostId" value="@Model.Id" />
                                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this comment?')">Delete</button>
                                            </form>
                                        </div>
                                    }
                                }
                            </div>
                            <p class="mt-3 mb-0">@comment.Content</p>
                            
                            <!-- DISPLAY REPLIES -->
                            @if (comment.Replies != null && comment.Replies.Any())
                            {
                                <div class="ms-4 mt-3">
                                    @foreach (var reply in comment.Replies.OrderBy(r => r.CreatedAt))
                                    {
                                        <div class="card mb-2 bg-light">
                                            <div class="card-body py-2">
                                                <div class="d-flex justify-content-between">
                                                    <div>
                                                        <h6 class="mb-1">
                                                            @reply.User.FirstName @reply.User.LastName
                                                            @if (reply.UserId == Model.AuthorId)
                                                            {
                                                                <span class="badge bg-info text-white">Author</span>
                                                            }
                                                        </h6>
                                                        <small class="text-muted">@reply.CreatedAt.ToString("MMM dd, yyyy 'at' hh:mm tt")</small>
                                                    </div>
                                                    @if (User.Identity.IsAuthenticated)
                                                    {
                                                        var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                                                        if (reply.UserId == userId || User.IsInRole("Admin"))
                                                        {
                                                            <form asp-controller="Comment" asp-action="Delete" method="post" class="d-inline">
                                                                @Html.AntiForgeryToken()
                                                                <input type="hidden" name="id" value="@reply.Id" />
                                                                <input type="hidden" name="blogPostId" value="@Model.Id" />
                                                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?')">Delete</button>
                                                            </form>
                                                        }
                                                    }
                                                </div>
                                                <p class="mt-2 mb-0">@reply.Content</p>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            
                            <!-- REPLY FORM -->
                            @if (User.Identity.IsAuthenticated)
                            {
                                <button class="btn btn-sm btn-link ps-0 mt-2" type="button" data-bs-toggle="collapse" data-bs-target="#reply-@comment.Id">
                                    Reply
                                </button>
                                <div class="collapse mt-2" id="reply-@comment.Id">
                                    <form asp-controller="Comment" asp-action="Create" method="post">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="BlogPostId" value="@Model.Id" />
                                        <input type="hidden" name="ParentCommentId" value="@comment.Id" />
                                        <div class="input-group">
                                            <textarea name="Content" class="form-control" rows="2" placeholder="Write your reply..." required></textarea>
                                            <button type="submit" class="btn btn-primary">Reply</button>
                                        </div>
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-secondary">
                    <p class="mb-0">No comments yet. Be the first to comment!</p>
                </div>
            }
        </section>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
